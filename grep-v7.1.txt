.TH GREP 1
.SH NAME
grep \- search a file for a pattern
.SH SYNOPSIS
grep [ option ] ... expression [ file ] ...
.SH DESCRIPTION
The grep function searches a file (passed in through standard input by default) and checks for matches of the inputted regular expression. The function will print the corresponding lines in which these conditions are satisfied. Each line is copied to standard output unless the h flag is used, in which case the filename would be displayed in the case of inputting multiple files.
.PP
The following options are recognized.
.TP
\-v 
All lines but those matching are printed.
.TP
\-c
Only a count of matching lines is printed.
.TP
\-l
The names of files with matching lines are listed (once) separated by newlines.
.TP
\-n
Each line is preceded by its line number in the file.
.TP
\-b
Each line is preceded by the block number on which it was found. This is sometimes useful in locating disk block numbers by context.
.TP
\-s
No output is produced, only status.
.TP
\-h
Do not print filename headers with output lines.
.TP
\-y
Lower case letters in the pattern will also match upper case letters in the input
.TP
\-e expression
Same as a simple expression argument, but useful when the expression begins with a \-.
.TP
\-d
Prints the hex representation of the compiled regex followed by a readable compiled regex.
.TP
-- ADDED FLAGS --
.TP
\-i
A more robust version of the y flag. Lower case letters in the pattern will also match upper case letters in the input, and vice versa. In addition, case is considered for characters within sets.
.TP
\-k
Writes the raw and compiled versions of the inputted expression to a unique file.
.PP
Care should be taken when using the characters $ * [ ^ | ? \' " ( ) and \e in the expression as they are also meaningful to the Shell. It is safest to enclose the entire expression argument in single quotes \' \'.
.PP
In the following description `character' excludes newline:
.IP
A \e followed by a single character
matches that character.
.IP
The character ^ ($) matches the beginning (end) of a line.
.IP
A . matches any character.
.IP
A single character not otherwise endowed with special meaning matches that character.
.IP
A string enclosed in brackets [\|] matches any single character from the string. Ranges of ASCII character codes may be abbreviated as in `a\-z0\-9'. A ] may occur only as the first character of the string. A literal \- must be placed where it can't be mistaken as a range indicator.
.IP
A regular expression followed by (*) matches a sequence of 0 or more matches of the regular expression.
.IP
A regular expression followed by (+) matches a sequence of 1 or more matches of the regular expression. In the case of inefficient expressions (redundant plus symbols), the overall compiled expression is truncated to only consider one per sequence of character to special characters.
.IP
A regular expression enclosed in parentheses matches a match for the regular expression.
.SH DIAGNOSTICS
Exit status is 0 if any matches are found, 1 if none, 2 for syntax errors or inaccessible files.
.SH EXPRESSION LIMIT
Regular expressions have a limit of being 8192 characters long. Longer expressions will be truncated and/or are not supported. 
.SH BUGS
.PP
The special character + does not function with groups ( ) entirely.